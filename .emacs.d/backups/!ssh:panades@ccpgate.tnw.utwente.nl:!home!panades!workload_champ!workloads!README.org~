* Workloads for CHAMP

In the present repo we have included the results of different QMC calculations performed with CHAMP.
They correspond to different setups of the butadiene molecule. The calculations were ran in our home
cluster ~CPPGATE~ and in ~JUWELS~. 

The calculations in ~JUWELS~ were ran with the following ~SLURM~ script:

#+begin_src bash
#!/bin/bash -x
# run_champ.sh
#SBATCH --account=prcoe10
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=48
#SBATCH --output=mpi-out.%j
#SBATCH --error=mpi-err.%j
#SBATCH --time=01:00:00
#SBATCH --partition=batch

srun ../../../software/champ/bin/vmc.mov1 < vmc.inp > vmc.out_core48
#+end_src

*Warning:* we are performing Monte Carlo runs and the final results (viewed by ~grep 'total E' vmc.out~)
 might differ for different machines but should be compatible within 2-3 standard deviations: see Section 1.1.1
for two runs on different machines which diverge after a certain number of steps.  Furthermore, since we are performing short runs,
 when optimizing many parameters, subsequent iterations might significantly differ (also outside errobars) as in the last example (Section 1.3).

** Optimization of the WF

In the present section three setups of butadiene WF optimization are presented. The setups are
ordered in increasing number of the determinants in the WF expansion.  

*** 500 determinants

Directory: =butadiene_cipsi500_T_optWF=

| Parameter     | Quantity |
|---------------+----------|
| Determinants  |      500 |
| Jastrow coeff |       13 |
| CI coeff      |      500 |
| Orbital coeff |     3404 |
|---------------+----------|
| Total         |     3916 |


Dimensions need to be manually allocated, as it is customary in F77 code: 

1. =champ/src/include/vmc.h=
  #+begin_src fortran
      parameter(MELEC=22,MORB=426,MBASIS=426,MDET=505,MCENT=15,MCTYPE=3,...
  #+end_src
2. =champ/src/include/optci.h=
  #+begin_src fortran
      parameter (MXCITERM=505,MXCIREDUCED=1,MXCIMATDIM=MXCITERM*(MXCIREDUCED+1)/2)
  #+end_src
3. =champ/src/include/optorb.h=
  #+begin_src fortran
      parameter (MXORBOP=10000,MXREDUCED=1,
  #+end_src
4. =champ/src/include/sr.h=
  #+begin_src fortran
      parameter(MPARM=10600,MOBS=10+6*MPARM,MCONF=2000,MVEC=5)
  #+end_src

The expected results in different clusters and with different number of CPUs are:

#+begin_src bash
# One CPU in CPPGATE
mpirun -np 1 -machinefile nodefile $HOME/champ/bin/vmc.mov1 < vmc.inp > vmc.out_core1
grep 'total E' vmc.out_core1
# total E =        -26.2249385 +-  0.0146349  0.92559  0.68991  0.68991    1.80
# total E =        -26.1848034 +-  0.0193458  1.22354  0.89295  0.89295    1.88
# total E =        -26.1263194 +-  0.0211849  1.33985  0.96942  0.96942    1.91
#+end_src

#+begin_src bash
# Twelve CPUs in CPPGATE
mpirun -s all -np 12 -machinefile nodefile $HOME/champ/bin/vmc.mov1 < vmc.inp > vmc.out_core12
grep 'total E' vmc.out_core12
# total E =        -26.2369854 +-  0.0041231  0.90333  0.69614  0.69614    1.68
# total E =        -26.2420237 +-  0.0039403  0.86327  0.66493  0.66493    1.69
# total E =        -26.2590957 +-  0.0037109  0.81303  0.66173  0.66173    1.51
#+end_src

#+begin_src bash
# Forty-eight CPUs in CPPGATE
mpirun -s all -np 48 -machinefile nodefile $HOME/champ/bin/vmc.mov1 < vmc.inp > vmc.out_core48
grep 'total E' vmc.out_core48
# total E =        -26.2351090 +-  0.0021138  0.92623  0.71967  0.71967    1.66
# total E =        -26.2469608 +-  0.0019907  0.87228  0.68057  0.68057    1.64
# total E =        -26.2533250 +-  0.0019096  0.83674  0.65634  0.65634    1.63
grep -A 15 "initial configuration from sites" vmc.out_core48_ccpgate | head -16
# initial configuration from sites
#     enow      eave  (eerr )    peave (peerr)    tpbave(tpberr    tjfave(tjferr    fave          (ferr)     accept     iter
#  -26.31809 -26.31809( 5310)   0.00000(    0) -26.31809( 5310)   0.00000(    0)                            0.54891       960
# END       OF equilb CP, REAL TIME IS       0.41      0.41     0     0
#     enow      eave  (eerr )    peave (peerr)    tpbave(tpberr    tjfave(tjferr    fave          (ferr)     accept     iter
#  -26.28175 -26.28175( 2575)   0.00000(    0) -26.28175( 2575)   0.00000(    0)                            0.54261       960
#  -26.20356 -26.24265( 2055)   0.00000(    0) -26.24265( 2055)   0.00000(    0)                            0.54366      1920
#  -26.23170 -26.23900( 1700)   0.00000(    0) -26.23900( 1700)   0.00000(    0)                            0.54396      2880
#  -26.22646 -26.23587( 1442)   0.00000(    0) -26.23587( 1442)   0.00000(    0)                            0.54518      3840
#  -26.23161 -26.23502( 1267)   0.00000(    0) -26.23502( 1267)   0.00000(    0)                            0.54408      4800
#  -26.28221 -26.24288( 1141)   0.00000(    0) -26.24288( 1141)   0.00000(    0)                            0.54378      5760
#  -26.19893 -26.23660( 1071)   0.00000(    0) -26.23660( 1071)   0.00000(    0)                            0.54477      6720
#  -26.24805 -26.23803(  998)   0.00000(    0) -26.23803(  998)   0.00000(    0)                            0.54477      7680
#  -26.22675 -26.23678(  926)   0.00000(    0) -26.23678(  926)   0.00000(    0)                            0.54448      8640
#  -26.17732 -26.23083(  883)   0.00000(    0) -26.23083(  883)   0.00000(    0)                            0.54438      9600
#  -26.28851 -26.23608(  845)   0.00000(    0) -26.23608(  845)   0.00000(    0)                            0.54421     10560
#+end_src

#+begin_src bash
# Forty-eight CPUs in JUWELS
sbatch run_champ.sh
grep 'total E' vmc.out_core48
# total E =        -26.2362215 +-  0.0020968  0.91879  0.69915  0.69915    1.73
# total E =        -26.2437321 +-  0.0019781  0.86678  0.67980  0.67980    1.63
# total E =        -26.2506229 +-  0.0019177  0.84031  0.66432  0.66432    1.60
grep -A 15 "initial configuration from sites" vmc.out_core48_juwels | head -16
# initial configuration from sites
#     enow      eave  (eerr )    peave (peerr)    tpbave(tpberr    tjfave(tjferr    fave          (ferr)     accept     iter
#  -26.31809 -26.31809( 5310)   0.00000(    0) -26.31809( 5310)   0.00000(    0)                            0.54891       960
# END       OF equilb CP, REAL TIME IS       0.18      0.18     0     0
#     enow      eave  (eerr )    peave (peerr)    tpbave(tpberr    tjfave(tjferr    fave          (ferr)     accept     iter
#  -26.28175 -26.28175( 2575)   0.00000(    0) -26.28175( 2575)   0.00000(    0)                            0.54261       960
#  -26.20356 -26.24265( 2055)   0.00000(    0) -26.24265( 2055)   0.00000(    0)                            0.54366      1920
#  -26.23197 -26.23909( 1700)   0.00000(    0) -26.23909( 1700)   0.00000(    0)                            0.54397      2880
#  -26.22290 -26.23504( 1446)   0.00000(    0) -26.23504( 1446)   0.00000(    0)                            0.54513      3840
#  -26.22546 -26.23313( 1303)   0.00000(    0) -26.23313( 1303)   0.00000(    0)                            0.54470      4800
#  -26.26919 -26.23914( 1171)   0.00000(    0) -26.23914( 1171)   0.00000(    0)                            0.54504      5760
#  -26.25528 -26.24144( 1104)   0.00000(    0) -26.24144( 1104)   0.00000(    0)                            0.54541      6720
#  -26.26772 -26.24473( 1040)   0.00000(    0) -26.24473( 1040)   0.00000(    0)                            0.54566      7680
#  -26.20032 -26.23979(  985)   0.00000(    0) -26.23979(  985)   0.00000(    0)                            0.54589      8640
#  -26.22313 -26.23813(  945)   0.00000(    0) -26.23813(  945)   0.00000(    0)                            0.54598      9600
#+end_src

*** 5000 determinants

Directory: =butadiene_cipsi5k_T_optWF=

| Parameter     | Quantity |
|---------------+----------|
| Determinants  |     5000 |
| Jastrow coeff |       13 |
| CI coeff      |     5000 |
| Orbital coeff |     7021 |
|---------------+----------|
| Total         |    12033 |


Dimensions need to be manually allocated, as it is customary in F77 code: 

1. =champ/src/include/vmc.h=
  #+begin_src fortran
      parameter(MELEC=22,MORB=426,MBASIS=426,MDET=5050,MCENT=15,MCTYPE=3,...
  #+end_src
2. =champ/src/include/optci.h=
  #+begin_src fortran
      parameter (MXCITERM=5050,MXCIREDUCED=1,MXCIMATDIM=MXCITERM*(MXCIREDUCED+1)/2)
  #+end_src
3. =champ/src/include/optorb.h=
  #+begin_src fortran
      parameter (MXORBOP=10000,MXREDUCED=1,
  #+end_src
4. =champ/src/include/sr.h=
  #+begin_src fortran
      parameter(MPARM=16000,MOBS=10+6*MPARM,MCONF=2000,MVEC=5)
  #+end_src

The expected results in different clusters and with different number of CPUs are:

#+begin_src bash
# One CPU in CPPGATE
mpirun -np 1 -machinefile nodefile $HOME/champ/bin/vmc.mov1 < vmc.inp > vmc.out_core1
grep 'total E' vmc.out_core1
# total E =        -26.2244168 +-  0.0155468  0.98326  0.71026  0.71026    1.92
# total E =        -26.2350319 +-  0.0176444  1.11593  0.96666  0.96666    1.33
# total E =        -26.1818119 +-  0.0164537  1.04063  0.77588  0.77588    1.80
#+end_src

#+begin_src bash
# Twelve CPUs in CPPGATE
mpirun -s all -np 12 -machinefile nodefile $HOME/champ/bin/vmc.mov1 < vmc.inp > vmc.out_core12
grep 'total E' vmc.out_core12
# total E =        -26.2333837 +-  0.0041056  0.89948  0.71778  0.71778    1.57
# total E =        -26.2464167 +-  0.0042336  0.92753  0.70850  0.70850    1.71
# total E =        -26.2520418 +-  0.0040270  0.88226  0.68427  0.68427    1.66
#+end_src

#+begin_src bash
# Forty-eight CPUs in CPPGATE
mpirun -s all -np 48 -machinefile nodefile $HOME/champ/bin/vmc.mov1 < vmc.inp > vmc.out_core48
grep 'total E' vmc.out_core48
# total E =        -26.2351090 +-  0.0021138  0.92623  0.71967  0.71967    1.66
# total E =        -26.2469608 +-  0.0019907  0.87228  0.68057  0.68057    1.64
# total E =        -26.2533250 +-  0.0019096  0.83674  0.65634  0.65634    1.63
#+end_src

#+begin_src bash
# Forty-eight CPUs in JUWELS
sbatch run_champ.sh
grep 'total E' vmc.out_core48
# total E =        -26.2399579 +-  0.0021416  0.93842  0.71450  0.71450    1.72
# total E =        -26.2487501 +-  0.0019599  0.85877  0.67582  0.67582    1.61
# total E =        -26.2558788 +-  0.0019207  0.84161  0.65622  0.65622    1.64
#+end_src

*** 15000 determinants
<<sec:15k>>

Directory: =butadiene_cipsi15k_T_optWF=

| Parameter     | Quantity |
|---------------+----------|
| Determinants  |    15469 |
| Jastrow coeff |       13 |
| CI coeff      |    15469 |
| Orbital coeff |     9337 |
|---------------+----------|
| Total         |    24818 |

Dimensions need to be manually allocated, as it is customary in F77 code: 

1. =champ/src/include/vmc.h=
  #+begin_src fortran
      parameter(MELEC=22,MORB=426,MBASIS=426,MDET=16000,MCENT=15,MCTYPE=3,...
  #+end_src
2. =champ/src/include/optci.h=
  #+begin_src fortran
      parameter (MXCITERM=16000,MXCIREDUCED=1,MXCIMATDIM=MXCITERM*(MXCIREDUCED+1)/2)
  #+end_src
3. =champ/src/include/optorb.h=
  #+begin_src fortran
      parameter (MXORBOP=10000,MXREDUCED=1,
  #+end_src
4. =champ/src/include/sr.h=
  #+begin_src fortran
      parameter(MPARM=26000,MOBS=10+6*MPARM,MCONF=2000,MVEC=5)
  #+end_src

The expected results in different clusters and with different number of CPUs are:

#+begin_src bash
# One CPU in CPPGATE
mpirun -np 1 -machinefile nodefile $HOME/champ/bin/vmc.mov1 < vmc.inp > vmc.out_core1
grep 'total E' vmc.out_core1
# total E =        -26.2236263 +-  0.0142058  0.89845  0.75441  0.75441    1.42
# total E =        -26.2372793 +-  0.0151332  0.95711  0.85614  0.85614    1.25
# total E =        -26.2431361 +-  0.0143312  0.90639  0.71089  0.71089    1.63
#+end_src

#+begin_src bash
# Twelve CPUs in CPPGATE
mpirun -s all -np 12 -machinefile nodefile $HOME/champ/bin/vmc.mov1 < vmc.inp > vmc.out_core12
grep 'total E' vmc.out_core12
# total E =        -26.2304603 +-  0.0045652  1.00018  0.75801  0.75801    1.74
# total E =        -26.2324774 +-  0.0042509  0.93132  0.71492  0.71492    1.70
# total E =        -26.2327906 +-  0.0042362  0.92809  0.72244  0.72244    1.65
#+end_src

#+begin_src bash
# Forty-eight CPUs in CPPGATE
mpirun -s all -np 48 -machinefile nodefile $HOME/champ/bin/vmc.mov1 < vmc.inp > vmc.out_core48
grep 'total E' vmc.out_core48
# total E =        -26.2302163 +-  0.0022153  0.97070  0.75058  0.75058    1.67
# total E =        -26.2439121 +-  0.0020241  0.88690  0.70229  0.70229    1.59
# total E =        -26.2533481 +-  0.0019514  0.85505  0.67065  0.67065    1.63
#+end_src

#+begin_src bash
# Forty-eight CPUs in JUWELS
sbatch run_champ.sh
grep 'total E' vmc.out_core48
# total E =        -26.2253702 +-  0.0022088  0.96784  0.75263  0.75263    1.65
# total E =        -26.2458040 +-  0.0020610  0.90307  0.69556  0.69556    1.69
# total E =        -26.2526436 +-  0.0019834  0.86907  0.66990  0.66990    1.68
#+end_src

** Optimization of the WF (15k determinants) with a three body Jastrow

In the present section we revisit the 15k determinants optimization of the last section,
and repeat it using a three body Jastrow.

Directory: =butadiene_cipsi15k_T_optWF_3body=

| Parameter     | Quantity |
|---------------+----------|
| Determinants  |    15469 |
| Jastrow coeff |       43 |
| CI coeff      |    15469 |
| Orbital coeff |     9337 |
|---------------+----------|
| Total         |    24848 |

Here the manual allocations are equivalent to those of the subsection [[sec:15k]]. The expected results
 in different clusters and with different number of CPUs are:

#+begin_src bash
# Twelve CPUs in CPPGATE
mpirun -s all -np 12 -machinefile nodefile $HOME/champ/bin/vmc.mov1 < vmc.inp > vmc.out_core12
grep 'total E' vmc.out_core12
# total E =        -26.2304603 +-  0.0045652  1.00018  0.75801  0.75801    1.74
# total E =        -26.2386058 +-  0.0042590  0.93309  0.71352  0.71352    1.71
# total E =        -26.2427094 +-  0.0044002  0.96403  0.71606  0.71606    1.81
#+end_src

#+begin_src bash
# Forty-eight CPUs in CPPGATE
mpirun -s all -np 48 -machinefile nodefile $HOME/champ/bin/vmc.mov1 < vmc.inp > vmc.out_core48
grep 'total E' vmc.out_core48
# total E =        -26.2302163 +-  0.0022153  0.97070  0.75058  0.75058    1.67
# total E =        -26.2432175 +-  0.0020442  0.89570  0.69435  0.69435    1.66
# total E =        -26.2592173 +-  0.0019349  0.84784  0.65351  0.65351    1.68
#+end_src

#+begin_src bash
# Forty-eight CPUs in JUWELS
sbatch run_champ.sh
grep 'total E' vmc.out_core48
# total E =        -26.2253702 +-  0.0022088  0.96784  0.75263  0.75263    1.65
# total E =        -26.2434656 +-  0.0020668  0.90564  0.68629  0.68629    1.74
# total E =        -26.2555210 +-  0.0018725  0.82047  0.64638  0.64638    1.61
#+end_src

** Optimization of the WF (45k determinants) and geometry

In this section we optimize the WF and geometry of the butadiene, using a larger
 number of determinants (45k).

Directory: =butadiene_cas1010_optWF+geo=

| Parameter     | Quantity |
|---------------+----------|
| Determinants  |    45644 |
| Jastrow coeff |       13 |
| CI coeff      |     8308 |
| Orbital coeff |     2774 |
|---------------+----------|
| Total         |    11094 |

Dimensions need to be manually allocated, as it is customary in F77 code: 

1. =champ/src/include/vmc.h=
  #+begin_src fortran
      parameter(MELEC=22,MORB=426,MBASIS=426,MDET=45700,MCENT=15,MCTYPE=3,...
  #+end_src
2. =champ/src/include/optci.h=
  #+begin_src fortran
      parameter (MXCITERM=8310,MXCIREDUCED=1,MXCIMATDIM=MXCITERM*(MXCIREDUCED+1)/2)
  #+end_src
3. =champ/src/include/optorb.h=
  #+begin_src fortran
      parameter (MXORBOP=3000,MXREDUCED=1,
  #+end_src
4. =champ/src/include/sr.h=
  #+begin_src fortran
      parameter(MPARM=12000,MOBS=10+6*MPARM,MCONF=2000,MVEC=5)
  #+end_src

The expected results in different clusters and with different number of CPUs are:

#+begin_src bash
# One CPU in CPPGATE
mpirun -np 1 -machinefile nodefile $HOME/champ/bin/vmc.mov1 < vmc.inp > vmc.out_core1 &
grep 'total E' vmc.out_core1
# total E =        -26.1659432 +-  0.0550938  0.77914  0.53141  0.53141    2.15
# total E =        -26.1995215 +-  0.0443882  0.62774  0.63629  0.63629    0.97
# total E =        -26.1482061 +-  0.0546974  0.84737  0.52473  0.52473    2.61
grep CENT vmc.out_core1 | tail -10
# CENT   -1.04465685222292      -0.684999290242164      -4.319304880041522E-002
# CENT    1.07806867852529       0.732484724982455      -1.411383095073661E-002
# CENT   -3.50178281172497       0.264651016205004      -3.010149759222856E-002
# CENT    3.29345249109321      -0.300430992571158       2.029711490176528E-002
# CENT   -3.71891932331582        2.31466166742306       1.408145547233152E-002
# CENT    3.68914203758668       -2.29456319362271      -8.161491596972126E-003
# CENT  -0.978422122178144       -2.74838473444288      -1.604823686443296E-002
# CENT   0.973663064423709        2.74964889029308       2.046773795898387E-002
# CENT   -5.14472715392325      -0.820160390499814      -3.537007941577544E-002
# CENT    5.07785990984282       0.817348991241690       8.365381492719653E-003
#+end_src

#+begin_src bash
# Twelve CPUs in CPPGATE
mpirun -s all -np 12 -machinefile nodefile $HOME/champ/bin/vmc.mov1 < vmc.inp > vmc.out_core12 &
grep 'total E' vmc.out_core12
# total E =        -26.2710898 +-  0.0141424  0.69283  0.54540  0.54540    1.61
# total E =        -26.2521661 +-  0.0181523  0.88928  0.65592  0.65592    1.84
# total E =        -26.2489656 +-  0.0175522  0.94195  0.78671  0.78671    1.43
grep CENT vmc.out_core12 | tail -10
# CENT   -1.17709121292964      -0.745366723694970       1.956643812763591E-002
# CENT    1.17378605661759       0.726345735005142       1.389916252033887E-003
# CENT   -3.46845343220032       0.281643261672607       2.539975322469845E-002
# CENT    3.48533385246041      -0.303396532295072      -1.334234077359114E-002
# CENT   -3.71413735381371        2.32004862186848       2.875852267696006E-003
# CENT    3.72213486814004       -2.32179994172733      -7.234393925335190E-003
# CENT  -0.988279444038511       -2.76518316191606       3.682646639509438E-004
# CENT   0.969637949218362        2.75947496859428       5.839882661744440E-003
# CENT   -5.13066656024161      -0.846734186749456      -2.204368216993585E-003
# CENT    5.14676760538466       0.851728357084424       1.572193845918656E-002
#+end_src

#+begin_src bash
# Forty-eight CPUs in CPPGATE
mpirun -s all -np 48 -machinefile nodefile $HOME/champ/bin/vmc.mov1 < vmc.inp > vmc.out_core48 &
grep 'total E' vmc.out_core48
# total E =        -26.2746713 +-  0.0073372  0.71890  0.55751  0.55751    1.66
# total E =        -26.2559574 +-  0.0078436  0.76851  0.66900  0.66900    1.32
# total E =        -26.2502337 +-  0.0078878  0.84660  0.71820  0.71820    1.39
grep CENT vmc.out_core48 | tail -10
# CENT   -1.16480031035463      -0.730387578474198       2.872293861450845E-003
# CENT    1.15799015954335       0.720559096318007      -1.116077392366093E-002
# CENT   -3.47484052155724       0.306281004028262       8.155348596908068E-003
# CENT    3.47252719728534      -0.292892102111146      -9.463806293196800E-003
# CENT   -3.71429360047054        2.31840377813979       3.283237408389220E-003
# CENT    3.71280845796465       -2.31472323974737       1.578483577345738E-003
# CENT  -0.964718992153208       -2.76065219535423       2.922649284159658E-003
# CENT   0.969867643494252        2.75716031523321       2.419389256770661E-003
# CENT   -5.13868979978080      -0.839435921155358      -4.168203985797587E-003
# CENT    5.14550419406687       0.843322476993058       6.193956790039716E-004
grep -A 15 "initial configuration from sites" vmc.out_core48 | head -16 # First step
# initial configuration from sites
#     enow      eave  (eerr )    peave (peerr)    tpbave(tpberr    tjfave(tjferr    fave (ferr)     accept     iter
#  -26.29872 -26.29872( 3103)   0.00000(    0) -26.29872( 3103)   0.00000(    0)                   0.54725       960
# END       OF equilb CP, REAL TIME IS       3.05      3.05     3     3
#     enow      eave  (eerr )    peave (peerr)    tpbave(tpberr    tjfave(tjferr    fave (ferr)     accept     iter
#  -26.28370 -26.28370( 1748)   0.00000(    0) -26.28370( 1748)   0.00000(    0)                   0.54219       960
#  -26.27113 -26.27741( 1498)   0.00000(    0) -26.27741( 1498)   0.00000(    0)                   0.54131      1920
#  -26.27835 -26.27773( 1257)   0.00000(    0) -26.27773( 1257)   0.00000(    0)                   0.54145      2880
#  -26.30372 -26.28422( 1078)   0.00000(    0) -26.28422( 1078)   0.00000(    0)                   0.54225      3840
#  -26.28715 -26.28481(  987)   0.00000(    0) -26.28481(  987)   0.00000(    0)                   0.54053      4800
#  -26.28223 -26.28438(  910)   0.00000(    0) -26.28438(  910)   0.00000(    0)                   0.54151      5760
#  -26.27523 -26.28307(  874)   0.00000(    0) -26.28307(  874)   0.00000(    0)                   0.54327      6720
#  -26.27275 -26.28178(  799)   0.00000(    0) -26.28178(  799)   0.00000(    0)                   0.54372      7680
#  -26.22151 -26.27508(  765)   0.00000(    0) -26.27508(  765)   0.00000(    0)                   0.54445      8640
#  -26.27095 -26.27467(  734)   0.00000(    0) -26.27467(  734)   0.00000(    0)                   0.54389      9600
#+end_src

#+begin_src bash
# Forty-eight CPUs in JUWELS
sbatch run_champ.sh
grep 'total E' vmc.out_core48
# total E =        -26.2760697 +-  0.0070892  0.69460  0.57397  0.57397    1.46
# total E =        -26.2328793 +-  0.0101112  0.99069  0.89334  0.89334    1.23
# total E =        -26.2221032 +-  0.0084205  0.90378  0.75194  0.75194    1.44
grep CENT vmc.out_core48 | tail -10
# CENT   -1.15674558089800      -0.730726142829921      -6.828221471981110E-003
# CENT    1.16399159436644       0.660444653077632       4.608259757000027E-002
# CENT   -3.45637330556432       0.220656709313348      -3.553089897366446E-002
# CENT    3.46739211255746      -0.310614028760011      -4.234349178630674E-003
# CENT   -3.72204040351936        2.32403597045339       2.861025498871098E-002
# CENT    3.71762044537155       -2.29708945276839      -2.507677750994472E-002
# CENT  -0.959376346157771       -2.76044084568579      -8.742075004041746E-003
# CENT   0.954696418263905        2.76606499904339      -1.905435922819402E-002
# CENT   -5.13490339029336      -0.837617586744258      -8.873065410688483E-003
# CENT    5.14435800560094       0.841796325533088      -1.520357207068054E-002
grep -A 15 "initial configuration from sites" vmc.out_core48 | head -16 # First step
# initial configuration from sites
#     enow      eave  (eerr )    peave (peerr)    tpbave(tpberr    tjfave(tjferr    fave (ferr)     accept     iter
#  -26.29872 -26.29872( 3103)   0.00000(    0) -26.29872( 3103)   0.00000(    0)                   0.54725       960
# END       OF equilb CP, REAL TIME IS       2.52      2.52     2     2
#     enow      eave  (eerr )    peave (peerr)    tpbave(tpberr    tjfave(tjferr    fave (ferr)     accept     iter
#  -26.28370 -26.28370( 1748)   0.00000(    0) -26.28370( 1748)   0.00000(    0)                   0.54219       960
#  -26.27113 -26.27741( 1498)   0.00000(    0) -26.27741( 1498)   0.00000(    0)                   0.54131      1920
#  -26.28469 -26.27984( 1250)   0.00000(    0) -26.27984( 1250)   0.00000(    0)                   0.54130      2880
#  -26.31048 -26.28750( 1069)   0.00000(    0) -26.28750( 1069)   0.00000(    0)                   0.54200      3840
#  -26.24200 -26.27840(  975)   0.00000(    0) -26.27840(  975)   0.00000(    0)                   0.54241      4800
#  -26.26594 -26.27632(  885)   0.00000(    0) -26.27632(  885)   0.00000(    0)                   0.54224      5760
#  -26.29823 -26.27945(  863)   0.00000(    0) -26.27945(  863)   0.00000(    0)                   0.54189      6720
#  -26.26767 -26.27798(  798)   0.00000(    0) -26.27798(  798)   0.00000(    0)                   0.54084      7680
#  -26.30093 -26.28053(  757)   0.00000(    0) -26.28053(  757)   0.00000(    0)                   0.54113      8640
#  -26.23593 -26.27607(  709)   0.00000(    0) -26.27607(  709)   0.00000(    0)                   0.54125      9600
# END       OF all    CP, REAL TIME IS      29.18     26.67    29    26
#+end_src

The difference in the results obtained with 48 CPUs in CPPGATE and JUWELS is particularly noticeable in the
error bar of the second step) can be explained if we consider that these calculations were ran only for a small number
of steps, and provided the large number of parameters (due to the many determinants included),
the sampling of the overlap matrix involved in the SR optimization is not effective. 

*** Single-determinant calculations


The use of a different random number
seed can help improving the equivalence of the results. To illustrate the effect of the amount of parameters, we also 
include the corresponding single determinant calculation (=butadiene_ras1022_Q_optWF+geo_1det=),
for which we obtain equivalent results. 

#+begin_src bash
# Forty-eight CPUs in CPPGATE
mpirun -s all -np 48 -machinefile nodefile $HOME/champ/bin/vmc.mov1 < vmc.inp > vmc.out_core48 &
grep 'total E' vmc.out_core48
# total E =        -26.2432924 +-  0.0077435  0.75871  0.59309  0.59309    1.64
# total E =        -26.2334092 +-  0.0086776  0.85022  0.64824  0.64824    1.72
# total E =        -26.2276150 +-  0.0079426  0.85249  0.64307  0.64307    1.76
grep CENT vmc.out_core48 | tail -10
# CENT   -1.16965786426929      -0.737160263952695       2.519648354921701E-002
# CENT    1.16752249279438       0.737710741971296       1.343063699045861E-002
# CENT   -3.46089448045736       0.291305761727153      -5.690148331419289E-003
# CENT    3.46556530899053      -0.309267360609828      -2.204190092099902E-003
# CENT   -3.70869592318035        2.31229368891114       7.604669684676053E-003
# CENT    3.71462735095542       -2.31264198391858      -2.906342261412457E-003
# CENT  -0.967698846048172       -2.75664609221965       3.435093776507580E-003
# CENT   0.967359232342212        2.75934504771633       1.652922912673378E-003
# CENT   -5.13997530620895      -0.847371442687236       3.160577096996079E-003
# CENT    5.14493400981569       0.847290599560748       3.059096909399049E-003
grep -A 15 "initial configuration from sites" vmc.out_core48 | head -16 # First step
# initial configuration from sites
#     enow      eave  (eerr )    peave (peerr)    tpbave(tpberr    tjfave(tjferr    fave (ferr)     accept     iter
#  -26.37189 -26.37189( 3718)   0.00000(    0) -26.37189( 3718)   0.00000(    0)                   0.55246       960
# END       OF equilb CP, REAL TIME IS       0.87      0.87     0     0
#     enow      eave  (eerr )    peave (peerr)    tpbave(tpberr    tjfave(tjferr    fave (ferr)     accept     iter
#  -26.20745 -26.20745( 2702)   0.00000(    0) -26.20745( 2702)   0.00000(    0)                   0.53835       960
#  -26.20066 -26.20405( 1746)   0.00000(    0) -26.20405( 1746)   0.00000(    0)                   0.53918      1920
#  -26.21299 -26.20703( 1370)   0.00000(    0) -26.20703( 1370)   0.00000(    0)                   0.53914      2880
#  -26.24640 -26.21687( 1184)   0.00000(    0) -26.21687( 1184)   0.00000(    0)                   0.53970      3840
#  -26.25103 -26.22371( 1065)   0.00000(    0) -26.22371( 1065)   0.00000(    0)                   0.53954      4800
#  -26.31978 -26.23972(  979)   0.00000(    0) -26.23972(  979)   0.00000(    0)                   0.54128      5760
#  -26.26899 -26.24390(  903)   0.00000(    0) -26.24390(  903)   0.00000(    0)                   0.54214      6720
#  -26.26643 -26.24672(  830)   0.00000(    0) -26.24672(  830)   0.00000(    0)                   0.54139      7680
#  -26.20775 -26.24239(  811)   0.00000(    0) -26.24239(  811)   0.00000(    0)                   0.54130      8640
#  -26.25144 -26.24329(  774)   0.00000(    0) -26.24329(  774)   0.00000(    0)                   0.54155      9600
# END       OF all    CP, REAL TIME IS       8.68      7.80     8     7
#+end_src

#+begin_src bash
# Forty-eight CPUs in JUWELS
sbatch run_champ.sh
grep 'total E' vmc.out_core48
# total E =        -26.2386747 +-  0.0080089  0.78471  0.60899  0.60899    1.66
# total E =        -26.2285510 +-  0.0085089  0.83370  0.66021  0.66021    1.59
# total E =        -26.2446771 +-  0.0076921  0.82560  0.69168  0.69168    1.42
grep CENT vmc.out_core48 | tail -10
# CENT   -1.17343260385351      -0.729980749123793      -1.035706913486501E-003
# CENT    1.16536539535801       0.723664855712027       1.776048417543548E-002
# CENT   -3.46752913284062       0.299886181486239       1.236705183958567E-002
# CENT    3.47308727236953      -0.292143872080936      -2.558957637002671E-003
# CENT   -3.70977125711973        2.31343993907366       1.123276225766725E-002
# CENT    3.71403034445787       -2.32671914505662       8.764278215846001E-004
# CENT  -0.963271636131696       -2.76372763109925       6.061751248227539E-004
# CENT   0.965525803078946        2.76238283847814       2.411914685673697E-003
# CENT   -5.13631278515034      -0.847941017227857      -4.091317349982840E-003
# CENT    5.14612781012712       0.844628226742412       1.403088849517143E-003
grep -A 15 "initial configuration from sites" vmc.out_core48 | head -16 # First step
# initial configuration from sites
#     enow      eave  (eerr )    peave (peerr)    tpbave(tpberr    tjfave(tjferr    fave (ferr)     accept     iter
#  -26.37189 -26.37189( 3718)   0.00000(    0) -26.37189( 3718)   0.00000(    0)                   0.55246       960
# END       OF equilb CP, REAL TIME IS       0.50      0.50     0     0
#     enow      eave  (eerr )    peave (peerr)    tpbave(tpberr    tjfave(tjferr    fave (ferr)     accept     iter
#  -26.20745 -26.20745( 2702)   0.00000(    0) -26.20745( 2702)   0.00000(    0)                   0.53835       960
#  -26.20066 -26.20405( 1746)   0.00000(    0) -26.20405( 1746)   0.00000(    0)                   0.53918      1920
#  -26.21299 -26.20703( 1370)   0.00000(    0) -26.20703( 1370)   0.00000(    0)                   0.53914      2880
#  -26.25376 -26.21871( 1180)   0.00000(    0) -26.21871( 1180)   0.00000(    0)                   0.53948      3840
#  -26.24026 -26.22302( 1046)   0.00000(    0) -26.22302( 1046)   0.00000(    0)                   0.53905      4800
#  -26.26030 -26.22924(  983)   0.00000(    0) -26.22924(  983)   0.00000(    0)                   0.53954      5760
#  -26.24041 -26.23083(  941)   0.00000(    0) -26.23083(  941)   0.00000(    0)                   0.53981      6720
#  -26.22306 -26.22986(  879)   0.00000(    0) -26.22986(  879)   0.00000(    0)                   0.53990      7680
#  -26.26274 -26.23351(  845)   0.00000(    0) -26.23351(  845)   0.00000(    0)                   0.54059      8640
#  -26.28512 -26.23867(  801)   0.00000(    0) -26.23867(  801)   0.00000(    0)                   0.54140      9600
# END       OF all    CP, REAL TIME IS       5.88      5.38     5     5
#+end_src
